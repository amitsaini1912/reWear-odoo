
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>ReWear - Home</title>
  <link rel="stylesheet" href="../../public/css/page4.css" />
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
  <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
</head>
<body>
  <div class="scroll-progress" id="scrollProgress"></div>
  <header class="header">
    <div class="container">
      <h1 class="logo">ðŸ‘• ReWear</h1>
      <nav class="nav">
        <a href="/">Home</a>
        <a href="/">Browse</a>
        <a href="/login">Login</a>
        <a href="/signup" class="signup-btn">Sign Up</a>
      </nav>
    </div>
  </header>

  <section class="hero">
    <div class="hero-content">
      <h2>Give Clothes a Second Life</h2>
      <p>Join our community and start swapping your unused clothes today. It's easy, fun, and eco-friendly!</p>
      <div class="cta-buttons">
        <button class="green-btn">Start Swapping</button>
        <button class="white-btn">Browse Items</button>
      </div>
    </div>
    <img src="https://images.unsplash.com/photo-1441986300917-64674bd600d8?w=400&h=300&fit=crop&crop=center" alt="Sustainable Fashion" class="hero-img" />
  </section>

    <section class="carousel-section">
    <div class="carousel-header">
      <h3>Featured Clothing</h3>
    </div>
    <button class="carousel-nav prev" onclick="prevCard()">&#8249;</button>
    <div class="carousel" id="carousel">
        <div class="card">
          <img src="https://images.unsplash.com/photo-1551028719-00167b16eac5?w=200&h=260&fit=crop&crop=center" alt="Denim Jacket" />
          <div class="brand-logo">Nike</div>
          <div class="item-overlay">
            <i class="fas fa-tshirt"></i>
            <span>Denim Jacket</span>
          </div>
        </div>
        <div class="card">
          <img src="https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?w=200&h=260&fit=crop&crop=center" alt="Casual Shirt" />
          <div class="brand-logo">Adidas</div>
          <div class="item-overlay">
            <i class="fas fa-tshirt"></i>
            <span>Casual Shirt</span>
          </div>
        </div>
        <div class="card">
          <img src="https://images.unsplash.com/photo-1515372039744-b8f02a3ae446?w=200&h=260&fit=crop&crop=center" alt="Summer Dress" />
          <div class="brand-logo">Zara</div>
          <div class="item-overlay">
            <i class="fas fa-female"></i>
            <span>Summer Dress</span>
          </div>
        </div>
        <div class="card">
          <img src="https://images.unsplash.com/photo-1542272604-787c3835535d?w=200&h=260&fit=crop&crop=center" alt="Denim Pants" />
          <div class="brand-logo">Levi's</div>
          <div class="item-overlay">
            <i class="fas fa-male"></i>
            <span>Denim Pants</span>
          </div>
        </div>
        <div class="card">
          <img src="https://images.unsplash.com/photo-1576566588028-4147f3842f27?w=200&h=260&fit=crop&crop=center" alt="Wool Sweater" />
          <div class="brand-logo">H&M</div>
          <div class="item-overlay">
            <i class="fas fa-tshirt"></i>
            <span>Wool Sweater</span>
          </div>
        </div>
        <div class="card">
          <img src="https://images.unsplash.com/photo-1556821840-3a63f95609a7?w=200&h=260&fit=crop&crop=center" alt="Cozy Hoodie" />
          <div class="brand-logo">Puma</div>
          <div class="item-overlay">
            <i class="fas fa-tshirt"></i>
            <span>Cozy Hoodie</span>
          </div>
        </div>
        <div class="card">
          <img src="https://images.unsplash.com/photo-1434389677669-e08b4cac3105?w=200&h=260&fit=crop&crop=center" alt="Leather Jacket" />
          <div class="brand-logo">Gucci</div>
          <div class="item-overlay">
            <i class="fas fa-tshirt"></i>
            <span>Leather Jacket</span>
          </div>
        </div>
        <div class="card">
          <img src="https://images.unsplash.com/photo-1503341504253-dff4815485f1?w=200&h=260&fit=crop&crop=center" alt="Blazer" />
          <div class="brand-logo">Calvin Klein</div>
          <div class="item-overlay">
            <i class="fas fa-tshirt"></i>
            <span>Formal Blazer</span>
          </div>
        </div>
        <div class="card">
          <img src="https://images.unsplash.com/photo-1441986300917-64674bd600d8?w=200&h=260&fit=crop&crop=center" alt="Sneakers" />
          <div class="brand-logo">Converse</div>
          <div class="item-overlay">
            <i class="fas fa-shoe-prints"></i>
            <span>Classic Sneakers</span>
          </div>
        </div>
        <div class="card">
          <img src="https://images.unsplash.com/photo-1544966503-7cc5ac882d5f?w=200&h=260&fit=crop&crop=center" alt="Backpack" />
          <div class="brand-logo">North Face</div>
          <div class="item-overlay">
            <i class="fas fa-briefcase"></i>
            <span>Travel Backpack</span>
          </div>
        </div>
    </div>
    <button class="carousel-nav next" onclick="nextCard()">&#8250;</button>
    <div class="scroll-indicator">
      <div class="scroll-dots">
        <span class="dot active"></span>
        <span class="dot"></span>
        <span class="dot"></span>
        <span class="dot"></span>
        <span class="dot"></span>
        <span class="dot"></span>
        <span class="dot"></span>
        <span class="dot"></span>
        <span class="dot"></span>
        <span class="dot"></span>
      </div>
    </div>
  </section>

  <section class="impact">
    <div class="impact-header">
      <div class="impact-logo">
        <i class="fas fa-leaf"></i>
      </div>
      <h3><i class="fas fa-chart-line"></i> Our Impact</h3>
    </div>
    <div class="metrics">
      <div class="metric">
        <div class="metric-logo">
          <img src="https://images.unsplash.com/photo-1551028719-00167b16eac5?w=60&h=60&fit=crop&crop=center" alt="Garments" />
        </div>
        <p>Garments Swapped</p>
        <h4>1,500+</h4>
      </div>
      <div class="metric">
        <div class="metric-logo">
          <img src="https://images.unsplash.com/photo-1581094794329-c8112a89af12?w=60&h=60&fit=crop&crop=center" alt="Recycling" />
        </div>
        <p>Waste Saved</p>
        <h4>800 kg</h4>
      </div>
      <div class="metric">
        <div class="metric-logo">
          <img src="https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=60&h=60&fit=crop&crop=center" alt="Users" />
        </div>
        <p>Happy Users</p>
        <h4>1,200+</h4>
      </div>
      <div class="metric">
        <div class="metric-logo">
          <img src="https://images.unsplash.com/photo-1473341304170-971dccb5ac1e?w=60&h=60&fit=crop&crop=center" alt="Environment" />
        </div>
        <p>CO2 Saved</p>
        <h4>2.5 tons</h4>
      </div>
      <div class="metric">
        <div class="metric-logo">
          <img src="https://images.unsplash.com/photo-1521737711867-e3b97375f902?w=60&h=60&fit=crop&crop=center" alt="Community" />
        </div>
        <p>Communities</p>
        <h4>50+</h4>
      </div>
    </div>
  </section>

  <script src="../../public/js/page4.js"></script>

  <style>
    
body {
    margin: 0;
    font-family: 'Poppins', sans-serif;
    background-color: #f0f4f8;
    color: #0B2341;
    padding-top: 80px;
  }
  
  /* Enhanced Scroll Progress Indicator */
  .scroll-progress {
    position: fixed;
    top: 0;
    left: 0;
    width: 0%;
    height: 6px;
    background: linear-gradient(90deg, #28a745, #20c997);
    z-index: 1000;
    transition: width 0.3s ease, background 0.3s ease, box-shadow 0.3s ease;
    border-radius: 0 0 3px 0;
    backdrop-filter: blur(10px);
  }
  
  .header {
    background-color: rgba(227, 242, 253, 0.95);
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
    padding: 0 80px;
    height: 80px;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
  }
  
  .header .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100%;
  }
  
  .logo {
    font-size: 24px;
    font-weight: 600;
  }
  
  .nav a {
    margin: 0 16px;
    text-decoration: none;
    color: #333;
    font-weight: 500;
    transition: color 0.3s ease;
    position: relative;
  }
  
  .nav a:hover {
    color: #28a745;
  }
  
  .nav a::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    bottom: -5px;
    left: 50%;
    background-color: #28a745;
    transition: all 0.3s ease;
    transform: translateX(-50%);
  }
  
  .nav a:hover::after {
    width: 100%;
  }
  
  .signup-btn {
    background-color: #28a745;
    color: white;
    padding: 8px 16px;
    border-radius: 8px;
    transition: all 0.3s ease;
  }
  
  .hero {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 60px 80px;
    background-color: #e8f4fd;
  }
  
  .hero-content {
    max-width: 600px;
  }
  
  .hero h2 {
    font-size: 40px;
    font-weight: 600;
    margin-bottom: 20px;
  }
  
  .hero p {
    font-size: 18px;
    margin-bottom: 30px;
  }
  
  .cta-buttons button {
    padding: 12px 24px;
    margin-right: 16px;
    font-size: 16px;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-weight: 500;
  }
  
  .green-btn {
    background-color: #28a745;
    color: white;
    border: none;
  }
  
  .green-btn:hover {
    background-color: #218838;
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(40, 167, 69, 0.3);
  }
  
  .white-btn {
    background-color: white;
    color: #28a745;
    border: 2px solid #28a745;
  }
  
  .white-btn:hover {
    background-color: #28a745;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(40, 167, 69, 0.2);
  }
  
  .hero-img {
    height: 280px;
    margin-left: 40px;
  }
  
  .carousel-section {
    text-align: center;
    padding: 60px 20px;
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    opacity: 1;
    transform: translateY(0);
    transition: all 0.8s ease;
    position: relative;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 450px;
  }
  
  @media (max-width: 768px) {
    .carousel-section {
      padding: 30px 15px;
      min-height: 350px;
    }
  }
  
  .carousel-header {
    margin-bottom: 40px;
    text-align: center;
    position: relative;
  }
  
  .carousel-header h3 {
    font-size: 42px;
    font-weight: 700;
    color: #0B2341;
    margin: 0 0 30px 0;
    text-align: center;
    position: relative;
    top: 0;
    letter-spacing: -0.5px;
  }
  
  .scroll-indicator {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 30px;
    position: relative;
    width: 100%;
    opacity: 1;
    visibility: visible;
  }
  
  .scroll-dots {
    display: flex;
    gap: 6px;
    align-items: center;
    justify-content: center;
  }
  
  .dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: rgba(40, 167, 69, 0.3);
    transition: all 0.3s ease;
    cursor: pointer;
    border: 1px solid transparent;
  }
  
  .dot.active {
    background: #28a745;
    transform: scale(1.1);
    box-shadow: 0 1px 4px rgba(40, 167, 69, 0.3);
    border-color: #ffffff;
  }
  
  .carousel {
    display: flex;
    flex-direction: row;
    gap: 20px;
    padding: 20px 60px;
    scroll-snap-type: x proximity;
    overflow-x: scroll;
    scroll-behavior: smooth;
    width: 100%;
    max-width: 1000px;
    margin: 0 auto;
    scrollbar-width: none;
    -ms-overflow-style: none;
    align-items: center;
    -webkit-overflow-scrolling: touch;
    position: relative;
  }
  
  .card.zoom {
    margin: 0;
  }
  
  @media (max-width: 768px) {
    .carousel {
      gap: 12px;
      padding: 15px 20px;
      max-width: 100%;
    }
  }
  
  .carousel::-webkit-scrollbar {
    display: none;
  }
  
  .carousel {
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    scroll-padding: 0 20px;
  }
  
  .card {
    flex: 0 0 auto;
    width: 180px;
    height: 240px;
    border-radius: 12px;
    background: #ffffff;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 16px;
    font-weight: bold;
    transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
    scroll-snap-align: start;
    position: relative;
    overflow: hidden;
    cursor: pointer;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
    opacity: 1;
    visibility: visible;
    border: 1px solid #f0f0f0;
  }
  
  @media (max-width: 768px) {
    .card {
      width: 160px;
      height: 220px;
      font-size: 14px;
      border-radius: 10px;
    }
  }
  
  .card img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 10px;
    transition: all 0.2s ease-out;
  }
  
  .card.zoom {
    transform: scale(1.15);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    z-index: 10;
    border-color: #e0e0e0;
    margin: 0 10px;
  }
  
  .card.zoom img {
    transform: scale(1.0);
  }
  
  .card:hover {
    transform: scale(1.02);
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.2);
    border-color: #e0e0e0;
  }
  
  .carousel-nav {
    background: rgba(255, 255, 255, 0.95);
    border: none;
    font-size: 24px;
    font-weight: bold;
    cursor: pointer;
    border-radius: 50%;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
    z-index: 10;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    backdrop-filter: blur(10px);
    color: #1a1a1a;
    border: 2px solid rgba(255, 255, 255, 0.3);
  }
  
  @media (max-width: 768px) {
    .carousel-nav {
      width: 40px;
      height: 40px;
      font-size: 20px;
    }
  }
  
  .carousel-nav:hover {
    background: rgba(40, 167, 69, 0.9);
    color: white;
    transform: translateY(-50%) scale(1.1);
    box-shadow: 0 8px 25px rgba(40, 167, 69, 0.4);
    border-color: rgba(255, 255, 255, 0.5);
  }
  
  .carousel-nav.prev {
    left: 30px;
  }
  
  .carousel-nav.next {
    right: 30px;
  }
  
  @media (max-width: 768px) {
    .carousel-nav {
      width: 40px;
      height: 40px;
      font-size: 20px;
    }
    
    .carousel-nav.prev {
      left: 15px;
    }
    
    .carousel-nav.next {
      right: 15px;
    }
  }
  
  .carousel-container {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 20px;
    margin-top: 30px;
    position: relative;
    max-width: 1200px;
    margin-left: auto;
    margin-right: auto;
  }
  
  .carousel-track {
    display: flex;
    overflow-x: auto;
    gap: 16px;
    scroll-behavior: smooth;
    padding: 10px 0;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }
  
  .carousel-track::-webkit-scrollbar {
    display: none;
  }
  
  .clothing-item {
    position: relative;
    flex-shrink: 0;
    transition: transform 0.3s ease, opacity 0.3s ease;
    cursor: pointer;
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease forwards;
    animation-delay: calc(var(--item-index) * 0.1s);
  }
  
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .clothing-item:hover {
    transform: scale(1.05);
  }
  
  .clothing-item img {
    width: 160px;
    height: 200px;
    border-radius: 12px;
    object-fit: cover;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }
  
  .brand-logo {
    position: absolute;
    top: 10px;
    left: 10px;
    background: rgba(255, 255, 255, 0.98);
    color: #0B2341;
    padding: 8px 12px;
    border-radius: 6px;
    font-size: 12px;
    font-weight: 700;
    letter-spacing: 0.5px;
    text-transform: uppercase;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.4);
    transition: all 0.2s ease-out;
    z-index: 2;
    box-shadow: 0 3px 12px rgba(0, 0, 0, 0.15);
  }
  
  .clothing-item:hover img {
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
  }
  
  .clothing-item:hover .brand-logo {
    background: rgba(255, 255, 255, 0.98);
    color: #0B2341;
    transform: scale(1.05);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  }
  
  .item-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(transparent, rgba(0, 0, 0, 0.8));
    color: white;
    padding: 20px 10px 10px;
    border-radius: 0 0 12px 12px;
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.2s ease-out;
  }
  
  .clothing-item:hover .item-overlay {
    opacity: 1;
    transform: translateY(0);
  }
  
  .item-overlay i {
    font-size: 18px;
    margin-bottom: 5px;
    display: block;
  }
  
  .item-overlay span {
    font-size: 14px;
    font-weight: 500;
  }
  
  .arrow {
    background: #ffffff;
    border: 2px solid #e0e0e0;
    font-size: 20px;
    cursor: pointer;
    border-radius: 50%;
    width: 44px;
    height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    z-index: 10;
  }
  
  .arrow:hover {
    background: #28a745;
    color: white;
    border-color: #28a745;
    transform: scale(1.1);
    box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
  }
  
  .impact {
    background: #e8f1ff;
    padding: 60px 20px;
    text-align: center;
    opacity: 0;
    transform: translateY(50px);
    transition: all 0.8s ease;
  }
  
  .impact-header {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 40px;
    gap: 20px;
  }
  
  .impact-logo {
    width: 80px;
    height: 80px;
    background: linear-gradient(135deg, #28a745, #20c997);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 8px 24px rgba(40, 167, 69, 0.3);
    transition: all 0.3s ease;
  }
  
  .impact-logo:hover {
    transform: scale(1.1) rotate(10deg);
    box-shadow: 0 12px 32px rgba(40, 167, 69, 0.4);
  }
  
  .impact-logo i {
    font-size: 36px;
    color: white;
  }
  
  .impact h3 {
    font-size: 32px;
    margin: 0;
    color: #0B2341;
  }
  
  .impact h3 i {
    margin-right: 12px;
    color: #28a745;
  }
  
  .metrics {
    display: flex;
    justify-content: center;
    gap: 48px;
    margin-top: 30px;
    flex-wrap: wrap;
  }
  
  .metric {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s ease;
    transition-delay: calc(var(--delay) * 0.1s);
  }
  
  .metric.revealed {
    opacity: 1;
    transform: translateY(0);
  }
  
  .metric-logo {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    overflow: hidden;
    margin: 0 auto 15px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
    border: 3px solid rgba(255, 255, 255, 0.8);
  }
  
  .metric-logo img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
  
  .metric:hover .metric-logo {
    transform: scale(1.1);
    box-shadow: 0 8px 25px rgba(40, 167, 69, 0.3);
    border-color: #28a745;
  }
  
  .metric:hover .metric-logo img {
    transform: scale(1.05);
  }
  
  .metric p {
    margin: 10px 0 5px;
    font-size: 16px;
    transition: color 0.3s ease;
  }
  
  .metric:hover p {
    color: #28a745;
  }
  
  .metric h4 {
    margin: 0;
    font-size: 24px;
    font-weight: 600;
    color: #0B2341;
    transition: all 0.3s ease;
  }
  
  .metric:hover h4 {
    transform: scale(1.1);
    color: #28a745;
  }
  </style>

  <script>
    
// Scroll-based Zoom Carousel functionality
const carousel = document.getElementById('carousel');
const cards = carousel.querySelectorAll('.card');

function updateZoomEffect() {
  const carouselRect = carousel.getBoundingClientRect();
  const centerX = carouselRect.left + carouselRect.width / 2;
  let activeIndex = 0;
  let minDistance = Infinity;

  cards.forEach((card, index) => {
    const cardRect = card.getBoundingClientRect();
    const cardCenter = cardRect.left + cardRect.width / 2;
    const distance = Math.abs(centerX - cardCenter);

    if (distance < minDistance) {
      minDistance = distance;
      activeIndex = index;
    }

    // More stable zoom detection - card must be very close to center
    if (distance < cardRect.width / 3.5) {
      card.classList.add('zoom');
    } else {
      card.classList.remove('zoom');
    }
  });

  // Update scroll indicator dots
  updateScrollIndicator(activeIndex);
}

function updateScrollIndicator(activeIndex) {
  const dots = document.querySelectorAll('.dot');
  dots.forEach((dot, index) => {
    if (index === activeIndex) {
      dot.classList.add('active');
    } else {
      dot.classList.remove('active');
    }
  });
}

function nextCard() {
  const isMobile = window.innerWidth <= 768;
  const cardWidth = isMobile ? 160 + 12 : 180 + 20; // card width + gap
  const currentScroll = carousel.scrollLeft;
  const maxScroll = carousel.scrollWidth - carousel.clientWidth;
  
  if (currentScroll >= maxScroll) {
    // If at the end, go to beginning
    carousel.scrollTo({ left: 0, behavior: 'smooth' });
  } else {
    // Scroll to next card
    const nextPosition = currentScroll + cardWidth;
    carousel.scrollTo({ left: nextPosition, behavior: 'smooth' });
  }
}

function prevCard() {
  const isMobile = window.innerWidth <= 768;
  const cardWidth = isMobile ? 160 + 12 : 180 + 20; // card width + gap
  const currentScroll = carousel.scrollLeft;
  
  if (currentScroll <= 0) {
    // If at the beginning, go to end
    const maxScroll = carousel.scrollWidth - carousel.clientWidth;
    carousel.scrollTo({ left: maxScroll, behavior: 'smooth' });
  } else {
    // Scroll to previous card
    const prevPosition = Math.max(currentScroll - cardWidth, 0);
    carousel.scrollTo({ left: prevPosition, behavior: 'smooth' });
  }
}

// Auto-scroll functionality
let autoScrollInterval;

function startAutoScroll() {
  autoScrollInterval = setInterval(() => {
    const isMobile = window.innerWidth <= 768;
    const cardWidth = isMobile ? 160 + 12 : 180 + 20; // card width + gap
    const currentScroll = carousel.scrollLeft;
    const maxScroll = carousel.scrollWidth - carousel.clientWidth;
    
    if (currentScroll >= maxScroll) {
      // If at the end, go to beginning
      carousel.scrollTo({ left: 0, behavior: 'smooth' });
    } else {
      // Scroll to next card, centering it
      const currentIndex = Math.round(currentScroll / cardWidth);
      const nextIndex = Math.min(currentIndex + 1, cards.length - 1);
      const nextPosition = nextIndex * cardWidth;
      carousel.scrollTo({ left: nextPosition, behavior: 'smooth' });
    }
  }, 3000); // Auto-scroll every 3 seconds
}

function stopAutoScroll() {
  clearInterval(autoScrollInterval);
}

// Animated counter for metrics
function animateCounter(element, target, duration = 2000) {
  let start = 0;
  const increment = target / (duration / 16);
  
  function updateCounter() {
    start += increment;
    if (start < target) {
      element.textContent = Math.floor(start) + (element.textContent.includes('+') ? '+' : '');
      requestAnimationFrame(updateCounter);
    } else {
      element.textContent = target + (element.textContent.includes('+') ? '+' : '');
    }
  }
  
  updateCounter();
}

// Initialize auto-scroll when page loads
document.addEventListener('DOMContentLoaded', function() {
  // Ensure carousel section is visible
  const carouselSection = document.querySelector('.carousel-section');
  if (carouselSection) {
    carouselSection.style.opacity = '1';
    carouselSection.style.transform = 'translateY(0)';
  }
  
  // Initialize zoom carousel and scroll indicator
  updateZoomEffect();
  
  // Force update scroll indicator on load
  setTimeout(() => {
    updateZoomEffect();
  }, 100);
  
  // Debug: Log carousel info
  console.log('Carousel initialized with', cards.length, 'cards');
  console.log('Card width:', 200, 'Gap:', 20, 'Total card width:', 220);
  
  // Disable auto-scroll by default for better user control
  // startAutoScroll();
  
  // Add scroll event listener for smooth zoom effect
  let lastZoomIndex = -1;
  
  carousel.addEventListener('scroll', () => {
    requestAnimationFrame(() => {
      const carouselRect = carousel.getBoundingClientRect();
      const centerX = carouselRect.left + carouselRect.width / 2;
      let currentZoomIndex = -1;
      let minDistance = Infinity;

      cards.forEach((card, index) => {
        const cardRect = card.getBoundingClientRect();
        const cardCenter = cardRect.left + cardRect.width / 2;
        const distance = Math.abs(centerX - cardCenter);

        if (distance < minDistance) {
          minDistance = distance;
          currentZoomIndex = index;
        }

        // Smooth zoom detection
        const zoomThreshold = cardRect.width / 2.5;
        
        if (distance < zoomThreshold) {
          card.classList.add('zoom');
        } else {
          card.classList.remove('zoom');
        }
      });

      // Update indicator
      if (currentZoomIndex !== lastZoomIndex) {
        updateScrollIndicator(currentZoomIndex);
        lastZoomIndex = currentZoomIndex;
      }
    });
  });
  
  // Pause auto-scroll on hover
  carouselSection.addEventListener('mouseenter', stopAutoScroll);
  carouselSection.addEventListener('mouseleave', () => {
    // Only restart auto-scroll if user hasn't interacted recently
    setTimeout(() => {
      // startAutoScroll();
    }, 1000);
  });
  
  // Add keyboard navigation
  document.addEventListener('keydown', function(e) {
    if (e.key === 'ArrowLeft') {
      prevCard();
    } else if (e.key === 'ArrowRight') {
      nextCard();
    }
  });
  
  // Add click navigation
  cards.forEach((card, index) => {
    card.addEventListener('click', () => {
      const isMobile = window.innerWidth <= 768;
      const cardWidth = isMobile ? 160 + 12 : 180 + 20; // card width + gap
      const scrollPosition = index * cardWidth;
      carousel.scrollTo({ left: scrollPosition, behavior: 'smooth' });
    });
  });

  // Add dot navigation
  const dots = document.querySelectorAll('.dot');
  dots.forEach((dot, index) => {
    dot.addEventListener('click', () => {
      const isMobile = window.innerWidth <= 768;
      const cardWidth = isMobile ? 160 + 12 : 180 + 20; // card width + gap
      const scrollPosition = index * cardWidth;
      carousel.scrollTo({ left: scrollPosition, behavior: 'smooth' });
    });
  });
  
  // Set animation delays for cards
  cards.forEach((card, index) => {
    card.style.setProperty('--item-index', index);
  });
  
  // Initialize zoom effect on window load
  window.addEventListener('load', updateZoomEffect);
  
  // Initialize counter animation when impact section is revealed
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const metrics = entry.target.querySelectorAll('.metric h4');
        metrics.forEach(metric => {
          const text = metric.textContent;
          const number = parseInt(text.replace(/[^0-9]/g, ''));
          if (!isNaN(number)) {
            animateCounter(metric, number);
          }
        });
        observer.unobserve(entry.target);
      }
    });
  }, { threshold: 0.5 });
  
  const impactSection = document.querySelector('.impact');
  if (impactSection) {
    observer.observe(impactSection);
  }
});

// Enhanced scroll with keyboard support
document.addEventListener('keydown', function(e) {
  if (e.key === 'ArrowLeft') {
    scrollCarousel(-1);
  } else if (e.key === 'ArrowRight') {
    scrollCarousel(1);
  }
});

// Enhanced Scroll Progress Indicator with smooth animation
function updateScrollProgress() {
  const scrollProgress = document.getElementById('scrollProgress');
  const scrollTop = window.pageYOffset;
  const docHeight = document.body.offsetHeight - window.innerHeight;
  const scrollPercent = Math.min((scrollTop / docHeight) * 100, 100);
  
  // Add smooth animation to progress bar
  scrollProgress.style.width = scrollPercent + '%';
  
  // Add glow effect based on scroll position
  const glowIntensity = Math.min(scrollPercent / 20, 1);
  scrollProgress.style.boxShadow = `0 0 20px rgba(40, 167, 69, ${glowIntensity * 0.5})`;
  
  // Update progress bar color based on scroll position
  if (scrollPercent > 80) {
    scrollProgress.style.background = 'linear-gradient(90deg, #dc3545, #fd7e14)';
  } else if (scrollPercent > 50) {
    scrollProgress.style.background = 'linear-gradient(90deg, #ffc107, #fd7e14)';
  } else {
    scrollProgress.style.background = 'linear-gradient(90deg, #28a745, #20c997)';
  }
}

// Throttle scroll events for better performance
function throttle(func, limit) {
  let inThrottle;
  return function() {
    const args = arguments;
    const context = this;
    if (!inThrottle) {
      func.apply(context, args);
      inThrottle = true;
      setTimeout(() => inThrottle = false, limit);
    }
  }
}

window.addEventListener('scroll', throttle(updateScrollProgress, 16)); // ~60fps

// Parallax scroll effect for hero section
function parallaxScroll() {
  const scrolled = window.pageYOffset;
  const hero = document.querySelector('.hero');
  const heroContent = document.querySelector('.hero-content');
  const heroImg = document.querySelector('.hero-img');
  
  if (hero && heroContent && heroImg) {
    const rate = scrolled * -0.5;
    heroContent.style.transform = `translateY(${rate * 0.3}px)`;
    heroImg.style.transform = `translateY(${rate * 0.1}px)`;
  }
}

window.addEventListener('scroll', throttle(parallaxScroll, 16));

// Smooth reveal animation for sections
function revealOnScroll() {
  const sections = document.querySelectorAll('.carousel, .impact');
  const metrics = document.querySelectorAll('.metric');
  const windowHeight = window.innerHeight;
  
  sections.forEach(section => {
    const sectionTop = section.getBoundingClientRect().top;
    const revealPoint = 150;
    
    if (sectionTop < windowHeight - revealPoint) {
      section.style.opacity = '1';
      section.style.transform = 'translateY(0)';
      
      // Animate metrics with staggered delay
      if (section.classList.contains('impact')) {
        metrics.forEach((metric, index) => {
          metric.style.setProperty('--delay', index);
          setTimeout(() => {
            metric.classList.add('revealed');
          }, index * 100);
        });
      }
    }
  });
}

window.addEventListener('scroll', throttle(revealOnScroll, 16));
  </script>
</body>
</html>